name: Deploy Staging Workflow

on:
  push:
    branches: 
      - dev
  pull_request:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: dev

      - name: Copy project
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key : ${{ secrets.SERVER_KEY }}
          source: ./
          target: ./${{ github.event.repository.name }}
          rm: true

      - name: Deploy project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            export FRONT_HOST=${{ secrets.STAG_FRONT_HOST }}
            export FRONT_PORT=${{ secrets.STAG_FRONT_PORT }}
            export APP_PORT=${{ secrets.STAG_APP_PORT }}
            export POSTGRES_USER=${{ secrets.STAG_POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.STAG_POSTGRES_PASSWORD }}
            export POSTGRES_PORT=${{ secrets.STAG_POSTGRES_PORT }}
            export JWT_SECRET=${{ secrets.STAG_JWT_SECRET }}
            echo $POSTGRES_USER
            echo $POSTGRES_PASSWORD
            cd ${{ github.event.repository.name }}
            docker-compose -f docker-compose.stag.yml up -d --build --no-deps

  # - name: executing remote ssh commands
  #   uses: appleboy/ssh-action@master
  #   with:
  #     host: ${{ secrets.SERVER_HOST }}
  #     username: ${{ secrets.SERVER_USER }}
  #     key : ${{ secrets.SERVER_KEY }}
  #     script: |
  #       echo ${{ github.event.repository.name }}
  #       [ ! -d ${{ github.event.repository.name }} ] && git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/itkmitl-tcas/itkmitl-tcas-backend.git
            
  # cd ${{ github.event.repository.name }}
  # git pull --force
  # export FRONT_HOST=${{ secrets.STAG_FRONT_HOST }}
  # export FRONT_PORT=${{ secrets.STAG_FRONT_PORT }}
  # export APP_PORT=${{ secrets.STAG_APP_PORT }}
  # export POSTGRES_USER=${{ secrets.STAG_POSTGRES_USER }}
  # export POSTGRES_PASSWORD=${{ secrets.STAG_POSTGRES_PASSWORD }}
  # export POSTGRES_PORT=${{ secrets.STAG_POSTGRES_PORT }}
  # export JWT_SECRET=${{ secrets.STAG_JWT_SECRET }}
  # docker-compose -f docker-compose.stag.yml down
  # docker-compose -f docker-compose.stag.yml up -d --no-deps --build

            



