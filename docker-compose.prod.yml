version: '3'
services:
  database:
    container_name: database
    image: "postgres" # use latest official postgres version
    environment:
      - POSTGRES_USER=${POSTGRES_USER} # configure postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - database-prod-data:/var/lib/postgresql/data/ # persist data even if container shuts down
    ports:
      - ${POSTGRES_PORT}:5432
    networks: 
      - application-prod-network
  backend:
    container_name: backend
    environment:
      NODE_ENV: production
      APP_PORT: ${APP_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - database
    ports: 
      - "3000:3000"
    networks: 
      - application-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/users || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 2
volumes:
    database-prod-data: # named volumes can be managed easier using docker-compose
        driver: local
networks:
  application-prod-network:
    driver: bridge  